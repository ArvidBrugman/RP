var geometry =
    ee.Geometry.Polygon(
        [[[-84.48224230272244, 33.677463578920175],
          [-84.48224230272244, 33.59885918329149],
          [-84.38302202684353, 33.59885918329149],
          [-84.38302202684353, 33.677463578920175]]], null, false);
Map.centerObject(geometry)




var collection_NO2 = ee.ImageCollection("COPERNICUS/S5P/OFFL/L3_NO2")
.select(['NO2_column_number_density'])
.filterDate('2020-07-01',     '2020-12-31')
.filterBounds(geometry)
//.filter(ee.Filter.calendarRange(1, 1, 'month'));

var   band_viz    =     {
            min:  0,
            max:  0.00015,
            palette:    ['black',   'blue',     'purple',   'cyan',     'green',    'yellow',   'red']
};


var NO2_density = collection_NO2.select(['NO2_column_number_density'])
var mean_NO2 = collection_NO2.mean()//multiply(1000000000);
//var stDev_NO2 = collection_NO2.reduce(ee.Reducer.stdDev()).multiply(1000000000);
Map.addLayer(mean_NO2.clip(geometry), band_viz, 'NO2 Area Airport, scaled');
Map.addLayer(mean_NO2, band_viz, 'NO2_world');

function    makeColorBarParams(palette)   {
return      {
            bbox: [0,   0,    1,    0.1],
            dimensions: '100x10',
            format:     'png',
            min:  0,
            max:  1,
            palette:    palette,
};
}
var   colorBar    =     ui.Thumbnail({
image:      ee.Image.pixelLonLat().select(0),
params:     makeColorBarParams(band_viz.palette),
style:      {stretch:   'horizontal',     margin:     '0px  8px', maxHeight:  '24px'},
});
var   legendLabels      =     ui.Panel({
widgets:    [
            ui.Label(band_viz.min,  {margin:    '4px  8px'}),
            ui.Label(
                                    (band_viz.max     /     2),
                                    {margin:    '4px  8px', textAlign:  'center',   stretch:    'horizontal'}),
            ui.Label(band_viz.max,  {margin:    '4px  8px'})
],
layout:     ui.Panel.Layout.flow('horizontal')
});
var   legendTitle =     ui.Label({
value:      'Map  Legend:     mean  NO2   (mol/m^2)',
style:      {fontWeight:      'bold'}
});
var   legendPanel =     ui.Panel([legendTitle,  colorBar,   legendLabels]);
Map.add(legendPanel);
print()


// This function scales values by a 1000000000

var ScaleImage1B = function(img) {
  var image = ee.Image(img).multiply(1000000000)
  return image.copyProperties(img, img.propertyNames())
};

// Apply the function to collection to scale
//var sampled_collection_NO2 = collection_NO2.limit(500); // Beperk tot 500 afbeeldingen
var collection_NO2 = collection_NO2.map(ScaleImage1B);

// Define the chart and print it to the console.
var chart =
    ui.Chart.image
        .series({
          imageCollection: collection_NO2,  
          region: geometry,
          reducer: ee.Reducer.mean(),
          scale: 500,
          xProperty: 'system:time_start'
        })
        .setSeriesNames(['NO2_column_number_density'])
        .setOptions({
          title: 'TROPOMI NO2 column number density over Airport area',
          hAxis: {title: 'Date', titleTextStyle: {italic: false, bold: true}},
          vAxis: {
            title: 'TROPOMI NO2 column number density [mol/m2]',
            titleTextStyle: {italic: false, bold: true}
          },
          lineWidth: 1,
          colors: ['red'],
          curveType: 'function'
        });

print(chart);



// Bereken gemiddelde en standaarddeviatie
var mean_NO2 = collection_NO2.reduce(ee.Reducer.mean());
var stDev_NO2 = collection_NO2.reduce(ee.Reducer.stdDev());

// Voeg standaarddeviatie toe als extra band aan de collectie
var combined_NO2 = collection_NO2.map(function(image) {
  var mean = image.select('NO2_column_number_density');
  var stdDev = image.select('NO2_column_number_density').reduceRegion({
    reducer: ee.Reducer.stdDev(),
    geometry: geometry,
    scale: 500
  }).values().get(0);
 
  return image.addBands(mean.rename('Mean'))
              .addBands(ee.Image.constant(stdDev).rename('StdDev'));
});

// Maak de grafiek met beide datasets
var chart = ui.Chart.image.series({
  imageCollection: combined_NO2,
  region: geometry,
  reducer: ee.Reducer.mean(),
  scale: 500,
  xProperty: 'system:time_start'
})
.setSeriesNames(['Mean', 'StdDev'])
.setOptions({
  title: 'TROPOMI NO2 column number density over Airport area',
  hAxis: {title: 'Date', titleTextStyle: {italic: false, bold: true}},
  vAxis: {
    title: 'TROPOMI NO2 column number density [mol/m2]',
    titleTextStyle: {italic: false, bold: true}
  },
  lineWidth: 2,
  colors: ['red', 'blue'],
  curveType: 'function'
});

// Toon de grafiek
print(chart);